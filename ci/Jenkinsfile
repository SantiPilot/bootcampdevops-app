#!/usr/bin/env groovy

// Inicializamos variable para guardar el error
def err = null

node {
    // Creamos el try catch para obtener el error si sucede
    try{
        stage('Checkout'){
            checkout([$class: 'GitSCM', 
            branches: [[name: '*/main']], 
            extensions: [], 
            userRemoteConfigs: [[credentialsId: 'github_token', 
            url: 'https://github.com/SantiPilot/bootcampdevops-app.git']]])
            sh "ls -la"
        }

        dir: "networking"
        stage('Terraform init'){
                sh "terraform init -reconfigure -backend-config=backend.conf"
        }
        stage('Terraform validate'){
            sh "terraform fmt && terraform validate"
        }
        stage('Terraform plan'){
            sh "terraform plan"
        }

    } catch(caughtError) {
        err = caughtError
        currentBuild.result = 'FAILURE'
    } finally {
        stage('Clean') {
            cleanWs()
        }
        if(err) {
            throw err
        }
    }
}